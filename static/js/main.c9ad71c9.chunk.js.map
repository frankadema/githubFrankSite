{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","side","open","setState","defineProperty","handleChange","name","event","target","value","state","left","emailAddress","subject","react_default","a","createElement","Fragment","index_es","onClose","tabIndex","role","onClick","onKeyDown","className","button","key","MoveToInbox_default","primary","map","text","index","Mail_default","aria-label","Menu_default","noWrap","Link_default","container","spacing","item","lg","alt","src","title","dense","Folder_default","secondary","variant","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9ad71c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Grid,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  ListItemAvatar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport LinkedinIcon from '@material-ui/icons/Link';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      left: false,\r\n      emailAddress: '',\r\n      subject: ''\r\n    }\r\n  }\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>        \r\n        <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('left', false)}\r\n            onKeyDown={this.toggleDrawer('left', false)}\r\n          >\r\n            <div className=\"list\">\r\n              <List className=\"fullList\">\r\n              <ListItem button key=\"Home\">\r\n                    <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                  </ListItem>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                  <ListItem button key={text}>\r\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                  ))}\r\n            </List>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n        <div className=\"root\">\r\n        {/* Voor header */}\r\n        <AppBar className=\"header\">\r\n          <Toolbar>\r\n            <IconButton className=\"menuButton\" aria-label=\"Open drawer\">\r\n              <MenuIcon onClick={this.toggleDrawer('left', true)}/>\r\n            </IconButton>\r\n            <Typography className=\"title\" noWrap>\r\n              Frank Adema\r\n            </Typography>\r\n            <div className=\"icons\">\r\n              <MailIcon />\r\n              <LinkedinIcon />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* slot header */}\r\n        {/* voor content herhaalbaar */}\r\n        <div className=\"content\">\r\n          <Grid container spacing={24}>\r\n            <Grid item className=\"grid\" lg={7}>\r\n              <Typography className=\"paperTitle\">Even voorstellen...</Typography>\r\n              <Typography className=\"paperConent\">\r\n                Hallo, mijn naam is Frank Adema. In mijn dagelijks leven houdt ik mij bezig met software ontwikkelingen op het gebied van applicaties. Op dit moment ben ik werkzaam bij The Learning Network in Emmen en Kampen. Binnen deze organisatie leer ik de fijne kneepjes van senior developers op het gebied van React, React Hooks, Redux en meer nieuwe technieken. Binnen deze oraganisatie ben ik samen met veel collega's verantwoordelijk voor het creÃ«ren van vette applicaties...\r\n              </Typography>\r\n              {/* <Typography className=\"paperConent\">\r\n                Op dit moment ben ik werkzaam als developer bij The Learning Network gevestigd in Nederland (Amsterdam, Kampen en Emmen) en Beglie. Binnen deze organisatie leer ik de fijne kneepjes van senior developers op het gebied van React, React Hooks, Redux en meer nieuwe technieken. Binnen deze oraganisatie ben ik samen met veel collega's verantwoordelijk voor het creeeren van vette applicaties.\r\n              </Typography> */}\r\n              <Button className=\"button\">Lees meer</Button>\r\n            </Grid>\r\n            <Grid item className=\"grid\" lg={5}>\r\n              <Avatar alt=\"Frank Adema\" src=\"https://media.licdn.com/dms/image/C5603AQES4-38Bu1McQ/profile-displayphoto-shrink_200_200/0?e=1559174400&v=beta&t=b8hSvlv0CWvXBcWlPK1WdFZIpifHHaZfeMdu0zACwH0\" className=\"avatar\"/>\r\n            </Grid>\r\n            <Grid item className=\"grid2\" lg={5}>\r\n              <img src=\"https://s3.amazonaws.com/peoplepng/wp-content/uploads/2018/03/14163859/Wrench-Transparent-PNG-1024x995.png\" alt=\"d\" title=\"a\" className=\"experienceHomepage\"/>\r\n            </Grid>\r\n            <Grid item className=\"grid2\" lg={7}>\r\n              <Typography className=\"paperTitle\">Ervaring</Typography>\r\n              <Typography className=\"paperConent\">\r\n                Ik heb ervaring opgedaan op diverse manieren (opleidingen, cursussen, workshops, werkervaring en hobbymatig).\r\n              </Typography>\r\n              <div className=\"listView\">\r\n                <List dense=\"true\" className=\"listHomepage\">\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FolderIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Vormgeving\"\r\n                        secondary=\"..., ..., ..., etc, etc\"\r\n                      />                     \r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FolderIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Design\"\r\n                        secondary=\"..., ..., ..., etc, etc\"\r\n                      />                     \r\n                    </ListItem>\r\n                    <ListItem >\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FolderIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary=\"Overig\"\r\n                        secondary=\"Jest, Material Ui, Bootstrap, etc, etc\"\r\n                      />                     \r\n                    </ListItem>\r\n                </List>\r\n              </div>\r\n              <Button variant=\"contained\" className=\"button\">Meer zien?</Button>\r\n            </Grid>\r\n            {/* <Grid item className=\"grid\" lg={12}>\r\n              <Typography className=\"paperTitle\">Contact</Typography>\r\n              <form className=\"formContainer\" noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"outlined-name\"\r\n                  label=\"Email\"\r\n                  className=\"formTextField\"\r\n                  value={this.state.emailAddress}\r\n                  onChange={this.handleChange('emailAddress')}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                /><br />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  // label=\"Subject\"\r\n                  multiline\r\n                  placeholder=\"Mail subject\"\r\n                  rows=\"4\"\r\n                  value={this.state.subject}\r\n                  onChange={this.handleChange('subject')}\r\n                  className=\"formTextField\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n                <Button variant=\"contained\" className=\"buttonForm\" fullWidth>Send mail</Button>\r\n              </form>\r\n            </Grid> */}\r\n          </Grid>\r\n        </div>\r\n        {/*slot contetn */}\r\n        {/* eventueel plek voor footer */}\r\n        {/* slot footer */}\r\n      </div>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}